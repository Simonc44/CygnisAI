
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    
    // Helper function to check for admin role from the user's own document
    function isAdmin() {
      // Use the requesting user's UID to get their document
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Users can only read/write their own user document, but admins can access any.
    match /users/{userId} {
      allow read, write: if request.auth.uid == userId || isAdmin();
      
      // Rules for subcollections inside user documents
      match /agents/{agentId} {
        allow read, write, delete: if request.auth.uid == userId;
      }
    }
    
    // Chats can be accessed only by members of the chat, or by an admin.
    match /chats/{chatId} {
      allow create: if request.auth != null;
      allow read, update, delete: if request.auth.uid in resource.data.members || isAdmin();
    }
    
    // AI Memories are private to each user.
    match /ai_memories/{memoryId} {
      allow read, write, delete: if request.auth.uid == resource.data.userId;
    }

    // Feedback can be created by anyone, but only read/managed by admins.
    match /feedback/{feedbackId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }
    
    // Contact messages can be created by anyone, but only read/managed by admins.
    match /contact_messages/{messageId} {
        allow create: if true;
        allow read, update, delete: if isAdmin();
    }

    // Projects (if used) are private to the user who created them or admins
    match /projects/{projectId} {
        allow read, write, delete: if request.auth.uid == resource.data.userId || isAdmin();
    }
  }
}

    
